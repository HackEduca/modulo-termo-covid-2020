/*********
  Rui Santos
  Complete project details at https://randomnerdtutorials.com  
  https://randomnerdtutorials.com/esp8266-0-96-inch-oled-display-with-arduino-ide/
*********/

#include <Wire.h>
#include <Adafruit_GFX.h>
#include <Adafruit_SSD1306.h>

#define SCREEN_WIDTH 128
#define SCREEN_HEIGHT 64

Adafruit_SSD1306 display(SCREEN_WIDTH, SCREEN_HEIGHT, &Wire, -1);

static const uint8_t image_data_Saraarray[1024] = {
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xfb, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xfd, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xfe, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xfe, 0x7f, 0xf8, 0x78, 0xe1, 0x87, 0x1c, 0x1f, 0x0c, 0x1f, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xf0, 0x60, 0x40, 0x02, 0x0c, 0x0e, 0x08, 0x1f, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0x3f, 0xe0, 0x60, 0x80, 0x86, 0x04, 0x04, 0x08, 0x1f, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0x3f, 0xe7, 0xcf, 0x9f, 0xcc, 0xe4, 0xe4, 0xf9, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xdf, 0xff, 0xce, 0x4f, 0x8b, 0xcc, 0xe4, 0xe4, 0xf9, 0x3f, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xf8, 0x2f, 0xff, 0xcc, 0x41, 0xc0, 0xcc, 0xf4, 0x84, 0x18, 0x1f, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xe0, 0x3f, 0xbf, 0xcc, 0x41, 0xc0, 0xcc, 0xf4, 0x8c, 0x1c, 0x0f, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xd1, 0xc7, 0xbf, 0xcf, 0x4f, 0xfc, 0xcc, 0xe4, 0x9c, 0xff, 0xcf, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xd7, 0xdf, 0xdf, 0xe2, 0x60, 0xc0, 0xcc, 0x44, 0x84, 0x0c, 0x0f, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xaf, 0xff, 0x7f, 0xe0, 0x60, 0x40, 0xce, 0x0c, 0xc6, 0x08, 0x1f, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0x9f, 0xff, 0x3f, 0xf0, 0x70, 0x41, 0xcf, 0x0c, 0xe7, 0x08, 0x1f, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xbf, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xbf, 0xfe, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xfb, 0xfb, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xf8, 0xf8, 0xff, 0xe0, 0xe1, 0xc7, 0x1f, 0x1e, 0xfe, 0x7e, 0x1b, 0xc7, 0x1f, 0x07, 0xff, 
    0xff, 0xfa, 0xff, 0xff, 0xe0, 0xc1, 0x83, 0x0e, 0x0c, 0xf8, 0x1c, 0x13, 0x86, 0x0e, 0x07, 0xff, 
    0xff, 0x7b, 0xf1, 0xff, 0xe0, 0x81, 0x02, 0x06, 0x04, 0xf8, 0x18, 0x1b, 0x06, 0x04, 0x07, 0xff, 
    0xff, 0xfd, 0xff, 0xff, 0xfb, 0x9f, 0x3e, 0x64, 0x64, 0xf1, 0x89, 0xf3, 0x3c, 0x64, 0xff, 0xff, 
    0xff, 0xfc, 0xff, 0xff, 0xfb, 0x07, 0x3c, 0xe4, 0xf0, 0xf3, 0xc9, 0x12, 0x7c, 0xf0, 0x0f, 0xff, 
    0xff, 0xfe, 0x7f, 0xdf, 0xfb, 0x03, 0x7c, 0xf4, 0xf0, 0xf3, 0xcb, 0x1a, 0x7c, 0xf2, 0x07, 0xff, 
    0xff, 0xfe, 0x3f, 0xbf, 0xfb, 0x03, 0x7c, 0xf4, 0xf0, 0xf3, 0xcb, 0x1a, 0x7c, 0xf2, 0x07, 0xff, 
    0xff, 0xff, 0x4f, 0x3f, 0xfb, 0x9f, 0x3c, 0xf4, 0xe4, 0xf3, 0xc9, 0xda, 0x3c, 0xe7, 0xf7, 0xff, 
    0xff, 0xff, 0x80, 0x7f, 0xfb, 0x81, 0x04, 0xf6, 0x64, 0x09, 0x98, 0x1b, 0x06, 0x66, 0x07, 0xff, 
    0xff, 0xff, 0xc1, 0xff, 0xfb, 0x81, 0x80, 0xf6, 0x06, 0x08, 0x1c, 0x13, 0x06, 0x06, 0x07, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xfb, 0xc1, 0xc2, 0xf7, 0x0e, 0x0c, 0x3e, 0x1b, 0x87, 0x0e, 0x0f, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff
};
 
void setup() {
  Serial.begin(115200);
 
  if(!display.begin(SSD1306_SWITCHCAPVCC, 0x3C)) {
    Serial.println(F("SSD1306 allocation failed"));
    for(;;);
  }
  delay(2000); // Pause for 2 seconds
 
  // Clear the buffer.
  display.clearDisplay();
  
  // Draw bitmap on the screen
  display.drawBitmap(0, 0, image_data_Saraarray, 128, 64, 1);
  display.display();
}
 
void loop() {
  
}
